#include <iostream>
using namespace std;

class Mahasiswa {
public:
  string nama;
  string nim;
  string jurusan;
  int umur;

  // Konstruktor default
  Mahasiswa() {}

  Mahasiswa (string nama, string nim, string jurusan, int umur) {
    this->nama = nama;
    this->nim = nim;
    this->jurusan = jurusan;
    this->umur = umur;
  }
};

class Node {
public:
  Mahasiswa data;
  Node* prev;
  Node* next;

  // Pemanggilan konstruktor default
  Node () {
    prev = NULL;
    next = NULL;
  }

  Node (Mahasiswa data) {
    this->data = data;
    prev = NULL;
    next = NULL;
  }
};

class DoublyLinkedList {
public:
  Node* head;
  Node* tail;

  DoublyLinkedList() {
    head = NULL;
    tail = NULL;
  }

  void tambahDepan(Mahasiswa data) {
    Node* nodeBaru = new Node(data);
    if (head == NULL) {
      head = nodeBaru;
      tail = nodeBaru;
    } else {
      nodeBaru->next = head;
      head->prev = nodeBaru;
      head = nodeBaru;
    }
  }

  void tambahBelakang(Mahasiswa data) {
    Node* nodeBaru = new Node(data);
    if (tail == NULL) {
      head = nodeBaru;
      tail = nodeBaru;
    } else {
      nodeBaru->prev = tail;
      tail->next = nodeBaru;
      tail = nodeBaru;
    }
  }

  void hapusDepan() {
    if (head == NULL) {
      return;
    } else if (head == tail) {
      delete head;
      head = NULL;
      tail = NULL;
    } else {
      Node* nodeHapus = head;
      head = head->next;
      head->prev = NULL;
      delete nodeHapus;
    }
  }

  void hapusBelakang() {
    if (tail == NULL) {
      return;
    } else if (head == tail) {
      delete tail;
      head = NULL;
      tail = NULL;
    } else {
      Node* nodeHapus = tail;
      tail = tail->prev;
      tail->next = NULL;
      delete nodeHapus;
    }
  }

  void tampilData() {
    Node* curr = head;
    while (curr != NULL) {
      cout << "Nama: " << curr->data.nama << endl;
      cout << "NIM: " << curr->data.nim << endl;
      cout << "Jurusan: " << curr->data.jurusan << endl;
      cout << "Umur: " << curr->data.umur << endl;
      cout << endl;
      curr = curr->next;
    }
  }
};

int main() {
  DoublyLinkedList dll;

  Mahasiswa m1("Ester", "G6401211030", "Ilmu Komputer", 20);
  Mahasiswa m2("Bina", "G5401211030", "Matematika", 21);
  Mahasiswa m3("Damanik", "G7401211030", "Fisika", 22);

  dll.tambahBelakang(m1);
  dll.tambahBelakang(m2);
  dll.tambahBelakang(m3);

  cout << "Data mahasiswa:" << endl;
  dll.tampilData();

  return 0;
}
